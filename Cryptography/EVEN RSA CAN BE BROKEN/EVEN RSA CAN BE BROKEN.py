from Crypto.Util.number import inverse, long_to_bytes

N = 18409251426023394384160209388014335380095667338341200670294652945169310133656418550626549808169249749374101991170731157307297583370425918675687552791660806
e = 65537
ciphertext = 781339467508707056163054261175449176344878785468623233839828540323265917370802352360476860200652303481503720492132488422565072765779919231172291541999951

# Check if N is divisible by 2
if N % 2 == 0:
    p = 2
    q = N // 2

    phi = (p - 1) * (q - 1)
    d = inverse(e, phi)
    m = pow(ciphertext, d, N)
    flag = long_to_bytes(m)
    print("Flag:", flag.decode(errors='ignore'))

